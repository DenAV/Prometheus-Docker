version: "3.7"

services:
  prometheus:
    image: "prom/prometheus"
    container_name: prometheus
    ports:
      - "${PROMET_PORT}:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      backend:
       aliases:
        - prometheus
               
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "${ALERT_MANAGER_PORT}:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - backend
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - backend
      - frontend
    restart: always
        
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - backend
    restart: always
    deploy:
      mode: global


networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
